{"version":3,"sources":["components/TodosContext/TodosContext.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodosContext","React","createContext","showModal","currentUser","currentTodo","selectValue","searchValue","handleShowModal","handleChangeUser","handleCurrentTodo","handleSelectValue","handleChangeSearch","clearSearchValue","TodosProvider","children","useState","setShowModal","currentUserId","setCurrentUserId","setCurrentTodo","setSelectValue","setSearchValue","value","userId","id","event","target","Provider","TodoItem","completed","title","useContext","className","classNames","type","onClick","TodoList","memo","todos","map","todo","TodoFilter","onChange","toLowerCase","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","cu","setCU","cT","setCT","useEffect","user","find","t","undefined","href","email","name","App","setTodos","todosFromServer","tt","filter","includes","trim","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e339268.chunk.js","sourcesContent":["import React, { ChangeEvent, useState } from 'react';\n\ntype TodosContextProps = {\n  showModal: boolean,\n  currentUser: number,\n  currentTodo: number,\n  selectValue: string,\n  searchValue: string,\n  handleShowModal: () => void,\n  handleChangeUser: (id: number) => void,\n  handleCurrentTodo: (id: number) => void,\n  handleSelectValue: (value: string) => void,\n  handleChangeSearch: (value: ChangeEvent<HTMLInputElement>) => void,\n  clearSearchValue: () => void,\n};\n\nexport const TodosContext = React.createContext<TodosContextProps>({\n  showModal: false,\n  currentUser: 0,\n  currentTodo: 0,\n  selectValue: '',\n  searchValue: '',\n  handleShowModal: () => { },\n  handleChangeUser: () => { },\n  handleCurrentTodo: () => { },\n  handleSelectValue: () => { },\n  handleChangeSearch: () => { },\n  clearSearchValue: () => { },\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [currentUserId, setCurrentUserId] = useState(0);\n  const [currentTodo, setCurrentTodo] = useState(0);\n  const [selectValue, setSelectValue] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleShowModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const handleChangeUser = (userId:number) => {\n    setCurrentUserId(userId);\n  };\n\n  const handleCurrentTodo = (id: number) => {\n    setCurrentTodo(id);\n  };\n\n  const handleSelectValue = (value: string) => {\n    setSelectValue(value);\n  };\n\n  const handleChangeSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(event.target.value);\n  };\n\n  const clearSearchValue = () => {\n    setSearchValue('');\n  };\n\n  const value = {\n    showModal,\n    currentUser: currentUserId,\n    currentTodo,\n    selectValue,\n    searchValue,\n    handleShowModal,\n    handleChangeUser,\n    handleCurrentTodo,\n    handleSelectValue,\n    handleChangeSearch,\n    clearSearchValue,\n  };\n\n  return (\n    <TodosContext.Provider value={value}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { TodosContext } from '../TodosContext/TodosContext';\n\ntype Props = {\n  completed: boolean,\n  id: number,\n  title: string,\n  userId: number,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  completed, id, title, userId,\n}) => {\n  const {\n    showModal,\n    handleShowModal,\n    handleChangeUser,\n    handleCurrentTodo,\n  } = useContext(TodosContext);\n\n  const handleClick = () => {\n    handleCurrentTodo(id);\n    handleChangeUser(userId);\n    handleShowModal();\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': showModal,\n      })}\n      key={id}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed ? (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        ) : ''}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className={classNames('is-vcentered', {\n        completed: 'has-text-right',\n      })}\n      >\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={handleClick}\n        >\n          <span className=\"icon\">\n            <i className={classNames('far', {\n              'fa-eye': !showModal,\n              'fa-eye-slash': showModal,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({ todos }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          completed, id, title, userId,\n        } = todo;\n\n        return (\n          <TodoItem\n            completed={completed}\n            id={id}\n            title={title}\n            userId={userId}\n            key={id}\n          />\n        );\n      })}\n      {/* <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n      <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">\n            qui ullam ratione quibusdam voluptatem quia omnis\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">8</td>\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr> */}\n    </tbody>\n  </table>\n));\n","import React, { useContext } from 'react';\nimport { TodosContext } from '../TodosContext/TodosContext';\n\nexport const TodoFilter: React.FC = () => {\n  const {\n    selectValue,\n    handleSelectValue,\n    handleChangeSearch,\n    searchValue,\n    clearSearchValue,\n  } = useContext(TodosContext);\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    handleSelectValue(event?.target.value.toLowerCase());\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectValue}\n            onChange={handleSelectChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchValue}\n          onChange={handleChangeSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchValue && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearSearchValue}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { TodosContext } from '../TodosContext/TodosContext';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  currentUser: number,\n  todos: Todo[] | null,\n};\n\nexport const TodoModal: React.FC<Props> = ({ currentUser, todos }) => {\n  const { handleShowModal, currentTodo } = useContext(TodosContext);\n\n  const [cu, setCU] = useState<User | null>(null);\n  const [cT, setCT] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getUser(currentUser).then((user) => {\n      setCU(user);\n    });\n    let todo;\n\n    if (todos !== null) {\n      todo = todos.find(t => t.id === currentTodo);\n    }\n\n    if (todo !== undefined) {\n      setCT(todo);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!cu ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${cT?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleShowModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {cT?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {cT?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${cu.email}`}>\n                {cu.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodosContext } from './components/TodosContext/TodosContext';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | null>(null);\n\n  const {\n    showModal, currentUser, selectValue, searchValue,\n  } = useContext(TodosContext);\n\n  useEffect(() => {\n    getTodos().then((todosFromServer) => {\n      const t = todosFromServer.filter(todo => {\n        switch (selectValue) {\n          case 'completed':\n            return todo.completed === true;\n          case 'active':\n            return todo.completed === false;\n          default:\n            return true;\n        }\n      });\n\n      const tt = t.filter((todo) => todo.title.toLowerCase().includes(searchValue.toLowerCase().trim()));\n\n      setTodos(tt);\n    });\n  }, [selectValue, searchValue]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {todos !== null ? <TodoList todos={todos} /> : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && <TodoModal currentUser={currentUser} todos={todos} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodosProvider } from './components/TodosContext/TodosContext';\n\nReactDOM.render(\n  <TodosProvider>\n    <App />\n  </TodosProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}